{"ast":null,"code":"var _jsxFileName = \"/media/jerome/DATA/STRATEGY/INCOME STREAMS/FREELANCING/DEV/SOLO FREELANCING/LEARNING/SOLIDITY/PROJECTS/NFT-REAL-ESTATE-APP/millow/src/App.js\",\n  _s = $RefreshSig$();\n// react hooks\nimport { useEffect, useState } from 'react';\n// ethers.js library from HardHat used to connect/bridge frontend to blockchain backend\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Search from './components/Search';\nimport Home from './components/Home';\n\n// ABIs\nimport RealEstate from './abis/RealEstate.json';\nimport Escrow from './abis/Escrow.json';\n\n// Config\nimport config from './config.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Below line mostly for being able to now access the smart contract stuff for the frontend functionality\n  const [provider, setProvider] = useState(null);\n  const [escrow, setEscrow] = useState(null);\n\n  // using React hook, useState function, and assigning below variables to it\n  // so that we can set the account state for the component (loadBlockchainData?), and read the state too.\n  // one of the other reasons for storing the account here in app level is for when the user changes accounts after initial connection.\n  const [account, setAccount] = useState(null);\n\n  // defining/loading this function, not calling it yet. Will call it via a react hook\n  const loadBlockchainData = async () => {\n    // create connection/bridge between frontend & blockchain via an ethers.js' provider, also via React hook\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n\n    // relevant ethereum network connected to in order to access the relevant smart contracts\n    const network = await provider.getNetwork();\n\n    // Using config.json to pull the correct smart contract (info) using network variable above\n    // and then creating an instance of the \"path\"/connection between frontend and backend(smart contract)\n    // in effect this is the frontend/javascript const/variable instance for the RealEstate smart contract.\n    const realEstate = new ethers.Contract(config[network.chainId].realEstate.address, RealEstate, provider);\n    const totalSupply = await realEstate.totalSupply();\n\n    // also creating a frontend/javascript instance of the escrow smart contract\n    const escrow = new ethers.Contract(config[network.chainId].escrow.address, Escrow, provider);\n\n    // to retrieve(and select if necessary) your currently active metamask account/wallet address.\n    // any other use/reason for below transaction?\n    // and we want to now save this account(s) (selected) below with the (loadBlockchainData?) component state\n    // ok, React uses components to (re)-ORGANISE and (re)-USE our code...\n    // but components also have a state: it's like a little \"database\"/list inside the component state. to record component subvalues?\n    // Using the React component state hook, useState, we can access those values inside each component's state...\n    // And now extra functionality was added to handle when user changes accounts after initial connection, for example?\n    window.ethereum.on('accountsChanged', async () => {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account);\n    });\n  };\n\n  // calling the above function via the below react hook\n  useEffect(() => {\n    loadBlockchainData();\n  }, []); // this empty array for detecting/listing any changes?\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Homes for you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"\",\n              alt: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"1 ETH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), \" bds |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), \" ba |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), \" sqft\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"1234 Elm street\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"htIn1EFtAP08aeII8rsQ3WuRLCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Search","Home","RealEstate","Escrow","config","App","provider","setProvider","escrow","setEscrow","account","setAccount","loadBlockchainData","providers","Web3Provider","window","ethereum","network","getNetwork","realEstate","Contract","chainId","address","totalSupply","on","accounts","request","method","utils","getAddress"],"sources":["/media/jerome/DATA/STRATEGY/INCOME STREAMS/FREELANCING/DEV/SOLO FREELANCING/LEARNING/SOLIDITY/PROJECTS/NFT-REAL-ESTATE-APP/millow/src/App.js"],"sourcesContent":["// react hooks\nimport { useEffect, useState } from 'react';\n// ethers.js library from HardHat used to connect/bridge frontend to blockchain backend\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Search from './components/Search';\nimport Home from './components/Home';\n\n// ABIs\nimport RealEstate from './abis/RealEstate.json';\nimport Escrow from './abis/Escrow.json';\n\n// Config\nimport config from './config.json';\n\nfunction App() {  \n\n  // Below line mostly for being able to now access the smart contract stuff for the frontend functionality\n  const [provider, setProvider] = useState(null)\n\n  const [escrow, setEscrow] = useState(null)\n\n  // using React hook, useState function, and assigning below variables to it\n  // so that we can set the account state for the component (loadBlockchainData?), and read the state too.\n  // one of the other reasons for storing the account here in app level is for when the user changes accounts after initial connection.\n  const [account, setAccount] = useState(null)\n\n  // defining/loading this function, not calling it yet. Will call it via a react hook\n  const loadBlockchainData = async () => {\n\n    // create connection/bridge between frontend & blockchain via an ethers.js' provider, also via React hook\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    setProvider(provider)\n\n    // relevant ethereum network connected to in order to access the relevant smart contracts\n    const network = await provider.getNetwork()\n\n    // Using config.json to pull the correct smart contract (info) using network variable above\n    // and then creating an instance of the \"path\"/connection between frontend and backend(smart contract)\n    // in effect this is the frontend/javascript const/variable instance for the RealEstate smart contract.\n    const realEstate = new ethers.Contract(config[network.chainId].realEstate.address, RealEstate, provider)\n    const totalSupply = await realEstate.totalSupply()\n\n    // also creating a frontend/javascript instance of the escrow smart contract\n    const escrow = new ethers.Contract(config[network.chainId].escrow.address, Escrow, provider)\n\n    // to retrieve(and select if necessary) your currently active metamask account/wallet address.\n    // any other use/reason for below transaction?\n    // and we want to now save this account(s) (selected) below with the (loadBlockchainData?) component state\n    // ok, React uses components to (re)-ORGANISE and (re)-USE our code...\n    // but components also have a state: it's like a little \"database\"/list inside the component state. to record component subvalues?\n    // Using the React component state hook, useState, we can access those values inside each component's state...\n    // And now extra functionality was added to handle when user changes accounts after initial connection, for example?\n    window.ethereum.on('accountsChanged', async () => {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts'});\n      const account = ethers.utils.getAddress(accounts[0])\n      setAccount(account);\n    })\n\n  }\n\n  // calling the above function via the below react hook\n  useEffect(() => {\n    loadBlockchainData()\n  }, []) // this empty array for detecting/listing any changes?\n\n  return (\n    <div>\n\n      {/* The below is the const pulled from the Navigation.js component */}\n      {/* and this is how you do a comment in React.js inside html */}\n      {/* and then we're also inputting here the two parameters of this function below */}\n      <Navigation account={account} setAccount={setAccount} />\n      <Search />\n\n      <div className='cards__section'>\n\n        <h3>Homes for you</h3>\n\n        <hr />\n\n        <div className='cards'>\n          <div className='card'>\n            <div className='card__image'>\n              <img src=\"\" alt=\"Home\" />\n            </div>\n            <div className='card__info'>\n              <h4>1 ETH</h4>\n              <p>\n                <strong>1</strong> bds |\n                <strong>2</strong> ba |\n                <strong>3</strong> sqft             \n              </p>\n              <p>1234 Elm street</p>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}